---
- name: Stage local backup
  block:
    - name: "Ensure backup data staging exists: {{ __nextcloud_paths.backup_staging + '/data' }}"
      ansible.builtin.file:
        group: "{{ nextcloud_backup_group }}"
        mode: "0750"
        owner: "{{ nextcloud_backup_user }}"
        path: "{{ __nextcloud_paths.backup_staging }}/data"
        state: directory
    - name: "Create unsafe staged backup, which will be resynced during maintenance mode"
      ansible.posix.synchronize:
        archive: true
        compress: true
        delay_updates: false
        delete: true
        dest: "{{ __nextcloud_paths.backup_staging }}/data"
        mode: push
        src: "{{ __nextcloud_paths.data }}/"
    - name: Enable maintenance mode
      vars:
        nextcloud_maintenance_mode: true
      ansible.builtin.include_tasks:
        file: actions/set_maintenance_mode.yml
    - name: "Sync nextcloud data to backup staging directory"
      ansible.posix.synchronize:
        archive: true
        compress: true
        delete: true
        dest: "{{ __nextcloud_paths.backup_staging }}/data"
        mode: push
        src: "{{ __nextcloud_paths.data }}/"
    - name: Create database backup
      community.mysql.mysql_db:
        name: "{{ nextcloud_db.name }}"
        state: dump
        target: "{{ __nextcloud_paths.backup_staging }}/db.sql.gz"
  always:
    - name: Disable maintenance mode
      vars:
        nextcloud_maintenance_mode: false
      ansible.builtin.include_tasks:
        file: actions/set_maintenance_mode.yml

- name: Create local backup
  block:
    - name: Create restic snapshot in local repository
      changed_when: true
      ansible.builtin.command:
        cmd: restic --password-file /etc/restic/repository-password -r "{{ nextcloud_backup_path }}/repository" --verbose --tag "nextcloud,nextcloud_v{{ nextcloud_version }}" backup "{{ __nextcloud_paths.backup_staging }}"
